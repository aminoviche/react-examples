/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Address } from './Address';
import {
    AddressFromJSON,
    AddressFromJSONTyped,
    AddressToJSON,
    AddressToJSONTyped,
} from './Address';

/**
 * 
 * @export
 * @interface CustomerRequest
 */
export interface CustomerRequest {
    /**
     * 
     * @type {string}
     * @memberof CustomerRequest
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof CustomerRequest
     */
    firstname: string;
    /**
     * 
     * @type {string}
     * @memberof CustomerRequest
     */
    lastname: string;
    /**
     * 
     * @type {string}
     * @memberof CustomerRequest
     */
    email: string;
    /**
     * 
     * @type {Address}
     * @memberof CustomerRequest
     */
    address?: Address;
}

/**
 * Check if a given object implements the CustomerRequest interface.
 */
export function instanceOfCustomerRequest(value: object): value is CustomerRequest {
    if (!('firstname' in value) || value['firstname'] === undefined) return false;
    if (!('lastname' in value) || value['lastname'] === undefined) return false;
    if (!('email' in value) || value['email'] === undefined) return false;
    return true;
}

export function CustomerRequestFromJSON(json: any): CustomerRequest {
    return CustomerRequestFromJSONTyped(json, false);
}

export function CustomerRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CustomerRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'firstname': json['firstname'],
        'lastname': json['lastname'],
        'email': json['email'],
        'address': json['address'] == null ? undefined : AddressFromJSON(json['address']),
    };
}

export function CustomerRequestToJSON(json: any): CustomerRequest {
    return CustomerRequestToJSONTyped(json, false);
}

export function CustomerRequestToJSONTyped(value?: CustomerRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'firstname': value['firstname'],
        'lastname': value['lastname'],
        'email': value['email'],
        'address': AddressToJSON(value['address']),
    };
}

