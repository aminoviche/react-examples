/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Address } from './Address';
import {
    AddressFromJSON,
    AddressFromJSONTyped,
    AddressToJSON,
    AddressToJSONTyped,
} from './Address';

/**
 * 
 * @export
 * @interface CustomerResponse
 */
export interface CustomerResponse {
    /**
     * 
     * @type {string}
     * @memberof CustomerResponse
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof CustomerResponse
     */
    firstname?: string;
    /**
     * 
     * @type {string}
     * @memberof CustomerResponse
     */
    lastname?: string;
    /**
     * 
     * @type {string}
     * @memberof CustomerResponse
     */
    email?: string;
    /**
     * 
     * @type {Address}
     * @memberof CustomerResponse
     */
    address?: Address;
}

/**
 * Check if a given object implements the CustomerResponse interface.
 */
export function instanceOfCustomerResponse(value: object): value is CustomerResponse {
    return true;
}

export function CustomerResponseFromJSON(json: any): CustomerResponse {
    return CustomerResponseFromJSONTyped(json, false);
}

export function CustomerResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): CustomerResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'firstname': json['firstname'] == null ? undefined : json['firstname'],
        'lastname': json['lastname'] == null ? undefined : json['lastname'],
        'email': json['email'] == null ? undefined : json['email'],
        'address': json['address'] == null ? undefined : AddressFromJSON(json['address']),
    };
}

export function CustomerResponseToJSON(json: any): CustomerResponse {
    return CustomerResponseToJSONTyped(json, false);
}

export function CustomerResponseToJSONTyped(value?: CustomerResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'firstname': value['firstname'],
        'lastname': value['lastname'],
        'email': value['email'],
        'address': AddressToJSON(value['address']),
    };
}

